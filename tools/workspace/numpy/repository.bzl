# -*- mode: python -*-
# vi: set ft=python :

"""
Provides NumPy from a wheel file.

Example:
    WORKSPACE:
        load("@drake//tools/workspace/numpy:repo.bzl", "numpy_repository")
        numpy_repository(
            name = "foo",
        )

    BUILD:
        py_library(
            name = "foobar",
            deps = ["@foo//:numpy"],
            srcs = ["bar.py"],
        )

Arguments:
    name: A unique name for this rule.
"""

# TODO(eric.cousineau): Add a configuration option to *not* use / install a
# custom NumPy (for development or other conflicts).

wheels = {
    "ubuntu": {
        "url": "https://github.com/EricCousineau-TRI/experimental/raw/e84664659a7ceeac016f626b4d77f5a89c4cad62/numpy/numpy-1.15.0.dev0%2B7d247f4-cp27-cp27mu-linux_x86_64.whl",  # noqa
        "sha256": "643f7e11c5f0213ae171d91e5759da51e4f39a0a9ba912f42189b3004507c21c",  # noqa
    },
}

def _impl(repository_ctx):
    wheel = wheels["ubuntu"]
    repository_ctx.download_and_extract(
        url = wheel["url"],
        sha256 = wheel["sha256"],
        type = "zip",
        # It is *vital* to strip the prefix; otherwise, Bazel's stilly
        # automatic `__init__.py` files will litter the tree and shadow the
        # real NumPy.
        stripPrefix = "numpy",
    )

    file_content = """# -*- python -*-

# DO NOT EDIT: generated by numpy_repository()

load("@drake//tools/install:install.bzl", "install")

licenses([
    "notice",  # BSD-2-Clause AND BSD-3-Clause AND MIT AND Python-2.0
    "unencumbered",  # Public-Domain
])

# Interpret `numpy` sources as data to simplify handling.
filegroup(
    name = "data",
    srcs = glob(["**/*"]),
    visibility = ["//visibility:private"],
)
print(glob(["**/*"]))

py_library(
    name = "numpy",
    # imports = [".."],
    visibility = ["//visibility:public"],
    data = [":data"],
)

install(
    name = "install",
    data = [":data"],
    data_dest = "lib/python2.7/site-packages",
)
    """

    repository_ctx.file("BUILD.bazel", content = file_content,
                        executable = False)

numpy_repository = repository_rule(
    _impl,
)

# Backwards-compatibility aliases.

load("@drake//tools/install:install.bzl", "install")
load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
)
load(
    "//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_test",
)
load(
    "//tools/skylark:pybind.bzl",
    "get_pybind_package_info",
)
load(":build_macros.bzl", "util_cc_header_alias")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

drake_py_library(
    name = "module_py",
    srcs = [
        "__init__.py",
        "all.py",
    ],
    deps = [
        "//bindings/pydrake/common",
    ],
)

# Package roll-up (for Bazel dependencies).
drake_py_library(
    name = "util",
    imports = PACKAGE_INFO.py_imports,
    deps = [":module_py"],
)

PY_LIBRARIES = [
    ":module_py",
]

cc_header_alias_names = [
    "cpp_param_pybind",
    "cpp_template_pybind",
    "deprecation_pybind",
    "drake_optional_pybind",
    "eigen_geometry_pybind",
    "eigen_pybind",
    "type_pack",
    "type_safe_index_pybind",
    "wrap_function",
    "wrap_pybind",
]

[
    util_cc_header_alias(name = name)
    for name in cc_header_alias_names
]

install(
    name = "install",
    targets = PY_LIBRARIES + cc_header_alias_names,
    py_dest = PACKAGE_INFO.py_dest,
)

drake_cc_googletest(
    name = "alias_cc_test",
    deps = cc_header_alias_names + [
        "//:drake_shared_library",
    ],
)

drake_py_test(
    name = "alias_py_test",
    allow_import_unittest = True,
    deps = ["util"],
)

add_lint_tests()

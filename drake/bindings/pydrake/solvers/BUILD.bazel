load(":pybind.bzl",
    "drake_pybind_library",
    "get_drake_pybind_install")

load("@drake//tools/install:install.bzl", "install")
load("//tools/lint:lint.bzl", "add_lint_tests")
load("//tools/workspace/mosek:mosek.bzl", "mosek_test_tags")

package(default_visibility = ["//drake/bindings/pydrake:__subpackages__"])

PY_IMPORTS = ["drake/bindings"]
PY_PKG_INSTALL = "pydrake/solvers"

drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    deps = [
        "//drake/bindings/pydrake:common_py",
    ],
)

drake_pybind_library(
    name = "ik_py",
    cc_devel_deps = [
        "//drake/multibody:inverse_kinematics",
    ],
    cc_srcs = ["ik_py.cc"],
    py_srcs = ["ik.py"],
    py_pkg_install = PY_PKG_INSTALL,
)

drake_pybind_library(
    name = "mathematicalprogram_py",
    cc_srcs = ["mathematicalprogram_py.cc"],
    py_srcs = ["mathematicalprogram.py"],
    cc_devel_deps = [
        "//drake/solvers:mathematical_program",
    ],
    cc_deps = [
        "//drake/bindings/pydrake:symbolic_types_py",
    ],
    py_deps = [
        "//drake/bindings/pydrake:symbolic_py",
    ],
)

drake_pybind_library(
    name = "gurobi_py",
    cc_devel_deps = [
        "//drake/solvers:gurobi_solver",
    ],
    cc_srcs = [
        "gurobi.cc",
    ],
    cc_so_name = "gurobi",
)

drake_pybind_library(
    name = "ipopt_py",
    cc_devel_deps = [
        "//drake/solvers:ipopt_solver",
    ],
    cc_srcs = [
        "ipopt.cc",
    ],
    cc_so_name = "ipopt",
)

drake_pybind_library(
    name = "mosek_py",
    cc_devel_deps = [
        "//drake/solvers:mosek_solver",
    ],
    cc_srcs = [
        "mosek.cc",
    ],
    cc_so_name = "mosek",
)

install(
    name = "install",
    deps = get_drake_pybind_installs([
        ":ik_py",
        ":mathematicalprogram_py",
        ":gurobi_py",
        ":ipopt_py",
        ":mosek_py",
    ]),
)

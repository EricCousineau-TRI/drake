# -*- python -*-

load(
    "//tools:drake.bzl",
    "drake_cc_library",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_test",
)
load("@drake//tools/install:install.bzl", "install")
load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    ":pybind.bzl",
    "drake_pybind_library",
    "get_drake_pybind_installs",
)

package(default_visibility = ["//drake/bindings/pydrake:__subpackages__"])

PY_PKG_INSTALL = "pydrake"

# WARNING:
# Any common headers should be shared via a HEADER ONLY library.

drake_pybind_library(
    name = "common_py",
    cc_devel_deps = [
        "//drake/common",
    ],
    cc_srcs = ["common_py.cc"],
    py_pkg_install = PY_PKG_INSTALL,
    py_srcs = [
        "__init__.py",
        "common.py",
        "path.py",
    ],
)

# TODO(eric.cousineau): Ensure that this is not installed.
drake_cc_library(
    name = "autodiff_types",
    hdrs = ["autodiff_types_py.h"],
    # NOTE: We must violate IWYU here because we do not want these dependencies
    # leaking in at install time.
    # deps = [
    #     "//drake/common:autodiff",
    # ],
)

drake_pybind_library(
    name = "autodiffutils_py",
    cc_deps = [
        ":autodiff_types",
    ],
    cc_devel_deps = [
        "//drake/common:autodiff",
    ],
    cc_srcs = ["autodiffutils_py.cc"],
    py_deps = [
        ":common_py",
    ],
    py_pkg_install = PY_PKG_INSTALL,
    py_srcs = [
        "autodiffutils.py",
        "forwarddiff.py",
    ],
)

drake_pybind_library(
    name = "rbtree_py",
    cc_deps = [
        ":autodiff_types",
    ],
    cc_devel_deps = [
        "//drake/multibody:rigid_body_tree",
    ],
    cc_srcs = ["rbtree_py.cc"],
    py_deps = [
        ":autodiffutils_py",
        ":common_py",
    ],
    py_pkg_install = PY_PKG_INSTALL,
    py_srcs = ["rbtree.py"],
)

drake_pybind_library(
    name = "parsers_py",
    cc_devel_deps = [
        "//drake/multibody:parsers",
    ],
    cc_so_name = "parsers",
    cc_srcs = ["parsers_py.cc"],
    py_deps = [
        ":common_py",
    ],
    py_pkg_install = PY_PKG_INSTALL,
)

# TODO(eric.cousineau): Make private.
drake_cc_library(
    name = "symbolic_types_py",
    hdrs = ["symbolic_types_py.h"],
)

drake_pybind_library(
    name = "symbolic_py",
    cc_deps = [
        ":symbolic_types_py",
    ],
    cc_devel_deps = [
        "//drake/common:symbolic",
    ],
    cc_srcs = ["symbolic_py.cc"],
    py_deps = [
        ":common_py",
    ],
    py_pkg_install = PY_PKG_INSTALL,
    py_srcs = ["symbolic.py"],
)

install(
    name = "install",
    visibility = ["//visibility:public"],
    deps = get_drake_pybind_installs([
        ":common_py",
        ":autodiffutils_py",
        ":symbolic_py",
        ":rbtree_py",
        ":parsers_py",
        "//drake/bindings/pydrake/solvers",
    ]),
)

drake_py_library(
    name = "pydrake",
    visibility = ["//visibility:public"],
    deps = [
        ":autodiffutils_py",
        ":common_py",
        ":parsers_py",
        ":rbtree_py",
        ":symbolic_py",
        "//drake/bindings/pydrake/solvers",
    ],
)

drake_py_test(
    name = "atlas_constructor_test",
    size = "small",
    srcs = ["test/atlas_constructor_test.py"],
    data = ["//drake/examples/atlas:models"],
    main = "test/atlas_constructor_test.py",
    deps = [":pydrake"],
)

drake_py_test(
    name = "common_test",
    size = "small",
    srcs = ["test/common_test.py"],
    data = ["//drake/examples/atlas:models"],
    main = "test/common_test.py",
    deps = [":pydrake"],
)

# `//:install` is run in this test to verify that once installed
# pydrake still works. This test is implemented in a separate file from
# common_test to be able to remove files in the sandbox without
# interfering with other tests. This test fails when bazel is run with
# `no_everything` because `libgurobi70.so` is not found [Issue #7283].
drake_py_test(
    name = "common_install_test",
    size = "medium",
    srcs = ["test/common_install_test.py"],
    data = ["//:install"],
    main = "test/common_install_test.py",
    tags = ["no_everything"],
    deps = [":pydrake"],
)

drake_py_test(
    name = "forward_diff_test",
    size = "small",
    srcs = ["test/forward_diff_test.py"],
    main = "test/forward_diff_test.py",
    deps = [":pydrake"],
)

drake_py_test(
    name = "rbm_forward_kin_test",
    size = "small",
    srcs = ["test/rbt_transform_points_test.py"],
    data = ["//drake/examples/pendulum:models"],
    main = "test/rbt_transform_points_test.py",
    deps = [":pydrake"],
)

drake_py_test(
    name = "rbt_com_test",
    size = "small",
    srcs = ["test/rbt_com_test.py"],
    data = ["//drake/examples/pendulum:models"],
    main = "test/rbt_com_test.py",
    deps = [":pydrake"],
)

drake_py_test(
    name = "symbolic_variables_test",
    size = "small",
    srcs = ["test/symbolic_test.py"],
    main = "test/symbolic_test.py",
    deps = [":pydrake"],
)

drake_py_test(
    name = "urdf_parser_test",
    size = "small",
    srcs = ["test/test_urdf_parser.py"],
    data = ["//drake/examples/pr2:models"],
    main = "test/test_urdf_parser.py",
    deps = [":pydrake"],
)

add_lint_tests()
